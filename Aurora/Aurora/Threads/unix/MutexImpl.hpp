#ifndef MUTEXIMPL_HPP
#define MUTEXIMPL_HPP

#include <pthread.h>

namespace Aurora
{
	namespace Threads
	{
		namespace priv
		{
			////////////////////////////////////////////////////////////
			/// \brief Unix implementation of mutexes
			////////////////////////////////////////////////////////////
			class MutexImpl
			{
			public :

				////////////////////////////////////////////////////////////
				/// \brief Default constructor
				///
				////////////////////////////////////////////////////////////
				MutexImpl();

				////////////////////////////////////////////////////////////
				/// \brief Destructor
				///
				////////////////////////////////////////////////////////////
				~MutexImpl();

				////////////////////////////////////////////////////////////
				/// \brief Lock the mutex
				///
				////////////////////////////////////////////////////////////
				void lock();

				////////////////////////////////////////////////////////////
				/// \brief Unlock the mutex
				///
				////////////////////////////////////////////////////////////
				void unlock();

			private :

				////////////////////////////////////////////////////////////
				// Member data
				////////////////////////////////////////////////////////////
				pthread_mutex_t m_mutex; ///< pthread handle of the mutex
			};

		} // namespace priv

	} // namespace sf
}

#endif
